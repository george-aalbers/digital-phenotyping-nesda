import json
import os
import pickle

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import pingouin as pg
import seaborn as sns
import shap
from boruta import BorutaPy
from sklearn.ensemble import RandomForestClassifier
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import (
    accuracy_score,
    f1_score,
    precision_score,
    recall_score,
    roc_auc_score,
)
from sklearn.model_selection import GridSearchCV, StratifiedKFold
from sklearn.pipeline import make_pipeline
from sklearn.preprocessing import MinMaxScaler
from sklearn.dummy import DummyClassifier

def make_config():
    
    data_dir          = "C:/Users/George.Aalbers/Desktop/behapp/data/"
    raw_dir           = "C:/Users/George.Aalbers/Desktop/behapp/data/raw/"
    interim_dir       = "C:/Users/George.Aalbers/Desktop/behapp/data/interim/"
    processed_dir     = "C:/Users/George.Aalbers/Desktop/behapp/data/processed/"
    evaluation_dir    = "C:/Users/George.Aalbers/Desktop/behapp/data/evaluation/"
    performance_dir   = "C:/Users/George.Aalbers/Desktop/behapp/performance/"
    model_dir         = "C:/Users/George.Aalbers/Desktop/behapp/models/"
    figure_dir        = "C:/Users/George.Aalbers/Desktop/behapp/figures/"
    descriptives_dir  = "C:/Users/George.Aalbers/Desktop/behapp/descriptives/"
    raw_data_paths    = ["N1_G257D.csv",
                         "N1_G259D.csv",
                         "N1_G100D.csv",
                         "N1_G256D.csv",
                         "N1_G258D.csv",
                         "nesda-behapp-merged.csv"]
    features          = [
                        "demo_age",
                        "demo_sex",
                        "demo_edu",
                        "app_duration_opened_all_apps_minutes",
                        "app_duration_opened_all_apps_minutes_at_night",
                        "app_duration_opened_camera_apps_minutes",
                        "app_duration_opened_clock_apps_minutes",
                        "app_duration_opened_communication_apps_minutes",
                        "app_duration_opened_entertainment_apps_minutes",
                        "app_duration_opened_health_fitness_apps_minutes",
                        "app_duration_opened_news_magazines_apps_minutes",
                        "app_duration_opened_social_media_apps_minutes",
                        "app_mean_duration_opened_communication_apps_minutes",
                        "app_mean_duration_opened_entertainment_apps_minutes",
                        "app_mean_duration_opened_health_fitness_apps_minutes",
                        "app_mean_duration_opened_news_magazines_apps_minutes",
                        "app_mean_duration_opened_social_media_apps_minutes",
                        "app_number_of_apps_used",
                        "app_number_of_times_opened_all_apps",
                        "app_number_of_times_opened_all_apps_at_night",
                        "app_number_of_times_opened_communication_apps",
                        "app_number_of_times_opened_entertainment_apps",
                        "app_number_of_times_opened_health_fitness_apps",
                        "app_number_of_times_opened_news_magazines_apps",
                        "app_number_of_times_opened_social_media_apps",
                        "app_phone_addiction",
                        "location_average_distance_from_home_kilometers",
                        "location_maximum_distance_from_home_kilometers",
                        "location_mean_distance_travelled_kilometers",
                        "location_mean_time_spent_stationary_hours",
                        "location_mean_time_spent_stationary_hours_excluding_home",
                        "location_mean_time_travelled_hours",
                        "location_percentage_of_staypoints_visited_once",
                        "location_standard_deviation_distance_travelled_kilometers",
                        "location_standard_deviation_time_travelled_hours",
                        "location_total_distance_travelled_kilometers",
                        "location_total_number_of_leisure_staypoints",
                        "location_total_number_of_nightly_staypoints",
                        "location_total_number_of_nightly_staypoints_excluding_home",
                        "location_total_number_of_single_visits",
                        "location_total_number_of_staypoints",
                        "location_total_number_of_trajectories",
                        "location_total_number_of_unique_leisure_staypoints",
                        "location_total_number_of_unique_nightly_staypoints",
                        "location_total_number_of_unique_staypoints",
                        "location_total_time_spent_at_home_hours",
                        "location_total_time_spent_outside_including_travel_hours",
                        "location_total_time_spent_stationary_hours",
                        "location_total_time_spent_stationary_hours_excluding_home",
                        "location_total_time_travelled_hours",
                    ]

    digital_features = [ 
                        "app_duration_opened_all_apps_minutes",
                        "app_duration_opened_all_apps_minutes_at_night",
                        "app_duration_opened_camera_apps_minutes",
                        "app_duration_opened_clock_apps_minutes",
                        "app_duration_opened_communication_apps_minutes",
                        "app_duration_opened_entertainment_apps_minutes",
                        "app_duration_opened_health_fitness_apps_minutes",
                        "app_duration_opened_news_magazines_apps_minutes",
                        "app_duration_opened_social_media_apps_minutes",
                        "app_mean_duration_opened_communication_apps_minutes",
                        "app_mean_duration_opened_entertainment_apps_minutes",
                        "app_mean_duration_opened_health_fitness_apps_minutes",
                        "app_mean_duration_opened_news_magazines_apps_minutes",
                        "app_mean_duration_opened_social_media_apps_minutes",
                        "app_number_of_apps_used",
                        "app_number_of_times_opened_all_apps",
                        "app_number_of_times_opened_all_apps_at_night",
                        "app_number_of_times_opened_communication_apps",
                        "app_number_of_times_opened_entertainment_apps",
                        "app_number_of_times_opened_health_fitness_apps",
                        "app_number_of_times_opened_news_magazines_apps",
                        "app_number_of_times_opened_social_media_apps",
                        "app_phone_addiction",
                        "location_average_distance_from_home_kilometers",
                        "location_maximum_distance_from_home_kilometers",
                        "location_mean_distance_travelled_kilometers",
                        "location_mean_time_spent_stationary_hours",
                        "location_mean_time_spent_stationary_hours_excluding_home",
                        "location_mean_time_travelled_hours",
                        "location_percentage_of_staypoints_visited_once",
                        "location_standard_deviation_distance_travelled_kilometers",
                        "location_standard_deviation_time_travelled_hours",
                        "location_total_distance_travelled_kilometers",
                        "location_total_number_of_leisure_staypoints",
                        "location_total_number_of_nightly_staypoints",
                        "location_total_number_of_nightly_staypoints_excluding_home",
                        "location_total_number_of_single_visits",
                        "location_total_number_of_staypoints",
                        "location_total_number_of_trajectories",
                        "location_total_number_of_unique_leisure_staypoints",
                        "location_total_number_of_unique_nightly_staypoints",
                        "location_total_number_of_unique_staypoints",
                        "location_total_time_spent_at_home_hours",
                        "location_total_time_spent_outside_including_travel_hours",
                        "location_total_time_spent_stationary_hours",
                        "location_total_time_spent_stationary_hours_excluding_home",
                        "location_total_time_travelled_hours" 
                        ] 
    
    df = pd.DataFrame(
        {
            "features": [features, features, features],
            "target": ["psychiatric_status", "group_dep", "group_anx"],
            "subthreshold_approach": ["merge-with-cases","merge-with-cases","merge-with-cases"],
        },
        index=['main','sensitivity_dep','sensitivity_anx'],
    )
    df.to_json("config.json")
    
    nesda_dict = {
        "pident": "id",
        "gcidep02": "dys_month",
        "gcidep03": "mdd_month",
        "gcidep04": "dys_6_month",
        "gcidep05": "mdd_6_month",
        "gcidep06": "dys_year",
        "gcidep07": "mdd_year",
        "gcidep08": "dys_since_last_interview",
        "gcidep09": "mdd_since_last_interview",
        "gcidep10": "n_diagnoses_6_month",
        "gcidep11": "depression_diagnoses_since_last_interview_binary",
        "gcidep12": "depression_diagnoses_since_last_interview_category",
        "ganxy01": "social_phobia_month",
        "ganxy02": "panic_agoraphobia_month",
        "ganxy03": "panic_no_agoraphobia_month",
        "ganxy04": "agoraphobia_month",
        "ganxy05": "gad_month",
        "ganxy06": "social_phobia_6_month",
        "ganxy07": "panic_agoraphobia_6_month",
        "ganxy08": "panic_no_agoraphobia_6_month",
        "ganxy09": "agoraphobia_6_month",
        "ganxy10": "gad_6_month",
        "ganxy11": "social_phobia_year",
        "ganxy12": "panic_agoraphobia_year",
        "ganxy13": "panic_no_agoraphobia_year",
        "ganxy14": "agoraphobia_year",
        "ganxy15": "gad_year",
        "ganxy16": "social_phobia_since_last_interview",
        "ganxy17": "panic_agoraphobia_since_last_interview",
        "ganxy18": "panic_no_agoraphobia_since_last_interview",
        "ganxy19": "agoraphobia_since_last_interview",
        "ganxy20": "gad_since_last_interview",
        "ganxy21": "n_anxiety_disorders_6_month",
        "ganxy22": "anxiety_disorders_since_last_interview_binary",
        "gids": "ids_total_score",
        "gidssev": "ids_severity_classification",
        "gqids": "qids_total_score",
        "gqidssev": "qids_severity_classification",
        "gidsatyp": "ids_atypical_features",
        "gidsmel": "ids_melancholic_features",
        "gbaimis": "bai_number_of_missing_values",
        "gbaiscal": "bai_total_score",
        "gbaisev": "bai_severity_classification",
        "gbaisom": "bai_somatic_score",
        "gbaisub": "bai_subjective_score",
        "gd29621": "mdd_single_mild_diagnosis",
        "gd29622": "mdd_single_moderate_diagnosis",
        "gd29623": "mdd_single_severe_diagnosis",
        "gd29621ao": "mdd_single_mild_age_onset",
        "gd29621re": "mdd_single_mild_recency",
        "gd29622ao": "mdd_single_moderate_age_onset",
        "gd29622re": "mdd_single_moderate_recency",
        "gd29623ao": "mdd_single_severe_age_onset",
        "gd29623re": "mdd_single_severe_recency",
        "gd29631": "mdd_recurrent_mild_diagnosis",
        "gd29632": "mdd_recurrent_moderate_diagnosis",
        "gd29633": "mdd_recurrent_severe_diagnosis",
        "gd29631ao": "mdd_recurrent_mild_age_onset",
        "gd29631re": "mdd_recurrent_mild_recency",
        "gd29632ao": "mdd_recurrent_moderate_age_onset",
        "gd29632re": "mdd_recurrent_moderate_recency",
        "gd29633ao": "mdd_recurrent_severe_age_onset",
        "gd29633re": "mdd_recurrent_severe_recency",
        "gd3004": "dysthymia_diagnosis",
        "gd3004ao": "dysthymia_age_onset",
        "gd3004re": "dysthymia_recency",
        "gndpboxsx": "number_of_symptoms_mdd",
        "gdpcore1": "sad_empty_depressed",
        "gdpcore2": "loss_of_interest",
        "gdpbox1": "fatigue",
        "gdpbox2": "weight_apetitechange",
        "gdpbox3": "sleep_problems",
        "gdpbox4": "psychomotor_agitation",
        "gdpbox5": "worthlessness_guilt",
        "gdpbox6": "confidence_self-esteem",
        "gdpbox7": "concentration_indecisiveness",
        "gdpbox8": "thoughts_of_death",
        "gd30002": "gad_diagnosis",
        "gd30002ao": "gad_age_onset",
        "gd30002re": "gad_recency",
        "gd30023": "social_phobia_diagnosis",
        "gd30023ao": "social_phobia_age_onset",
        "gd30023re": "social_phobia_recency",
        "gd30023ar": "social_phobia_age__recency",
        "gd30001": "panic_without_agoraphobia_diagnosis",
        "gd30001ao": "panic_without_agoraphobia_age_onset",
        "gd30001re": "panic_without_agoraphobia_recency",
        "gd30001ar": "panic_without_agoraphobia_age__recency",
        "gd30021": "panic_with_agoraphobia_diagnosis",
        "gd30021ao": "panic_with_agoraphobia_diagnosis_age_onset",
        "gd30021re": "panic_with_agoraphobia_diagnosis_recency",
        "gd30021ar": "panic_with_agoraphobia_diagnosis_age__recency",
        "gd30022": "agoraphobia_without_panic_diagnosis",
        "gd30022ao": "agoraphobia_without_panic_age_onset",
        "gd30022re": "agoraphobia_without_panic_recency",
        "gage": "demo_age",
        "sex": "demo_sex",
        "gedu": "demo_edu",
    }
    
    with open(raw_dir + "nesda_dictionary.json", "w") as outfile:
        json.dump(nesda_dict, outfile)
    
    descriptives_dict = {
        "dys_month": "sum",
        "mdd_month": "sum",
        "dys_6_month": "sum",
        "mdd_6_month": "sum",
        "dys_year": "sum",
        "mdd_year": "sum",
        "dys_since_last_interview": "sum",
        "mdd_since_last_interview": "sum",
        "n_diagnoses_6_month": ["mean", "median", "std", "min", "max"],
        "social_phobia_month": "sum",
        "panic_agoraphobia_month": "sum",
        "panic_no_agoraphobia_month": "sum",
        "agoraphobia_month": "sum",
        "gad_month": "sum",
        "social_phobia_6_month": "sum",
        "panic_agoraphobia_6_month": "sum",
        "panic_no_agoraphobia_6_month": "sum",
        "agoraphobia_6_month": "sum",
        "gad_6_month": "sum",
        "social_phobia_year": "sum",
        "panic_agoraphobia_year": "sum",
        "panic_no_agoraphobia_year": "sum",
        "agoraphobia_year": "sum",
        "gad_year": "sum",
        "social_phobia_since_last_interview": "sum",
        "panic_agoraphobia_since_last_interview": "sum",
        "panic_no_agoraphobia_since_last_interview": "sum",
        "agoraphobia_since_last_interview": "sum",
        "gad_since_last_interview": "sum",
        "n_anxiety_disorders_6_month": ["mean", "median", "std", "min", "max"],
        "demo_sex": "sum",
        "demo_age": ["mean", "median", "std", "min", "max"],
        "number_of_symptoms_mdd": ["mean", "median", "std", "min", "max"],
        "ids_total_score": ["mean", "median", "std", "min", "max"],
        "qids_total_score": ["mean", "median", "std", "min", "max"],
        "bai_total_score": ["mean", "median", "std", "min", "max"],
        "bai_somatic_score": ["mean", "median", "std", "min", "max"],
        "bai_subjective_score": ["mean", "median", "std", "min", "max"],
        "unique_number_of_days_with_data": ["mean", "median", "std", "min", "max"],
        "unique_number_of_days_with_location_data": ["mean", "median", "std", "min", "max"],
        "unique_number_of_days_with_app_data": ["mean", "median", "std", "min", "max"],
        "gap_percentage_of_time_without_gaps": ["mean", "median", "std", "min", "max"],
        "gap_percentage_of_time_without_location_data_gaps": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "app_duration_opened_all_apps_minutes": ["mean", "median", "std", "min", "max"],
        "app_duration_opened_all_apps_minutes_at_night": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "app_duration_opened_camera_apps_minutes": ["mean", "median", "std", "min", "max"],
        "app_duration_opened_clock_apps_minutes": ["mean", "median", "std", "min", "max"],
        "app_duration_opened_communication_apps_minutes": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "app_duration_opened_entertainment_apps_minutes": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "app_duration_opened_health_fitness_apps_minutes": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "app_duration_opened_news_magazines_apps_minutes": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "app_duration_opened_social_media_apps_minutes": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "app_mean_duration_opened_communication_apps_minutes": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "app_mean_duration_opened_entertainment_apps_minutes": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "app_mean_duration_opened_health_fitness_apps_minutes": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "app_mean_duration_opened_news_magazines_apps_minutes": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "app_mean_duration_opened_social_media_apps_minutes": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "app_number_of_apps_used": ["mean", "median", "std", "min", "max"],
        "app_number_of_times_opened_all_apps": ["mean", "median", "std", "min", "max"],
        "app_number_of_times_opened_all_apps_at_night": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "app_number_of_times_opened_communication_apps": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "app_number_of_times_opened_entertainment_apps": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "app_number_of_times_opened_health_fitness_apps": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "app_number_of_times_opened_news_magazines_apps": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "app_number_of_times_opened_social_media_apps": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "app_phone_addiction": ["mean", "median", "std", "min", "max"],
        "location_average_distance_from_home_kilometers": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "location_maximum_distance_from_home_kilometers": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "location_mean_distance_travelled_kilometers": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "location_mean_time_spent_stationary_hours": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "location_mean_time_spent_stationary_hours_excluding_home": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "location_mean_time_travelled_hours": ["mean", "median", "std", "min", "max"],
        "location_normalized_entropy_time_spent_stationary_minutes": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "location_normalized_entropy_visit_count": ["mean", "median", "std", "min", "max"],
        "location_percentage_of_staypoints_visited_once": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "location_standard_deviation_distance_travelled_kilometers": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "location_standard_deviation_time_travelled_hours": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "location_total_distance_travelled_kilometers": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "location_total_number_of_leisure_staypoints": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "location_total_number_of_nightly_staypoints": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "location_total_number_of_nightly_staypoints_excluding_home": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "location_total_number_of_single_visits": ["mean", "median", "std", "min", "max"],
        "location_total_number_of_staypoints": ["mean", "median", "std", "min", "max"],
        "location_total_number_of_trajectories": ["mean", "median", "std", "min", "max"],
        "location_total_number_of_unique_leisure_staypoints": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "location_total_number_of_unique_nightly_staypoints": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "location_total_number_of_unique_staypoints": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "location_total_time_spent_at_home_hours": ["mean", "median", "std", "min", "max"],
        "location_total_time_spent_outside_including_travel_hours": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "location_total_time_spent_stationary_hours": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "location_total_time_spent_stationary_hours_excluding_home": [
            "mean",
            "median",
            "std",
            "min",
            "max",
        ],
        "location_total_time_travelled_hours": ["mean", "median", "std", "min", "max"],
    }
    
    with open(raw_dir + "descriptives_dictionary.json", "w") as outfile:
        json.dump(descriptives_dict, outfile)

    return data_dir, raw_dir, interim_dir, processed_dir, evaluation_dir, performance_dir, model_dir, figure_dir, descriptives_dir, features, digital_features, descriptives_dict, raw_data_paths    